{"version":3,"file":"js/678.3f9fc7bc.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/utils/verifyToken.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/user/Contacts.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/views/user/Contacts.vue?f4c5"],"sourcesContent":["import router from \"@/router\";\n\nconst verifyToken = () => {\n  if (!localStorage.getItem(\"token\"))\n    router.push({ name: \"Login\" });\n}\n\nexport default verifyToken;","<template>\n  <div>\n    <h1>Contacts</h1>\n    <CContainer>\n        <CRow>\n            <CCol xs=\"12\" md=\"4\">\n                <CListGroup>\n                    <CListGroupItem v-for=\"contact in sorted_contacts\" :key=\"contact.id\">\n                        <CContainerFluid>\n                            <CRow>\n                                <CCol md=\"10\" xs=\"8\" class=\"d-flex align-items-center justify-content-start\" height=\"100%\">\n                                    <CRow>\n                                        <CCol>\n                                            <h5 class=\"mb-0\">{{ contact.name }}</h5>\n                                            <p class=\"mb-0\">@{{ contact.username }}</p>\n                                        </CCol>\n                                    </CRow>\n                                </CCol>\n                                <CCol>\n                                    <CButton class=\"float-end\" color=\"primary\" size=\"sm\" @click=\"remove_contact(contact.id)\">\n                                        <CIcon name=\"cil-trash\" class=\"text-white\"/>\n                                    </CButton>\n                                </CCol>\n                            </CRow>\n                        </CContainerFluid>\n                    </CListGroupItem>\n                </CListGroup>\n            </CCol>\n            <CCol>\n                <CCard>\n                    <CCardHeader>\n                        <CInputGroup class=\"mb-3\">\n                            <CFormInput placeholder=\"Enter a username or email of your emergency contact\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" type=\"search\" v-model=\"search_text\"/>\n                            <CInputGroupText id=\"basic-addon2\">\n                                <CButton @click=\"search\">\n                                    <CIcon name=\"cil-magnifying-glass\"/>\n                                </CButton>\n                            </CInputGroupText>\n                        </CInputGroup>\n                    </CCardHeader>\n                    <CCardBody v-if=\"found_contact\" class=\"user_card\">\n                        <div class=\"user_avatar\">\n                            <CCardText>@{{ found_contact.username }}</CCardText>\n                        </div>\n                        <div class=\"user_info\">\n                            <CCardTitle>{{ found_contact.name }}</CCardTitle>\n                            <CButton \n                                v-if=\"!contacts_usernames.includes(found_contact.username) && found_contact.id !== user_id\"\n                                color=\"primary\" \n                                class=\"text-white\"\n                                @click=\"add_contact(found_contact.id)\"\n                            >Add to contacts\n                            </CButton>\n                        </div>\n                    </CCardBody>\n                    <CCardBody v-else-if=\"contact_not_found\">\n                        <CCardTitle>Contact not found</CCardTitle>\n                        <CCardText>Try searching again</CCardText>\n                    </CCardBody>\n                    <CCardBody v-else>\n                        <CCardTitle>Search a new contact</CCardTitle>\n                        <CCardText>You can add them to your emergency contacts so they will be notified when any of your nodes detect a harmful situation, you can add a total of 10 contacts</CCardText>\n                    </CCardBody>\n                </CCard>\n            </CCol>                    \n        </CRow>\n    </CContainer>\n    <!-- Toast of erros -->\n    <CToaster style=\"position: absolute; bottom: 5px; right: 5px; z-index: 9999\" v-if=\"toast.show\">\n      <CToast\n        :show=\"toast.show\"\n        autohide=\"true\"\n        fade=\"true\"\n        @hide=\"toast.show = false\"\n      >\n        <CToastHeader>\n          <CIcon name=\"cil-check-circle\" class=\"me-2\" />\n          Error\n        </CToastHeader>\n        <CToastBody>\n            {{ toast.message }}\n        </CToastBody>\n      </CToast>\n    </CToaster>\n  </div>\n</template>\n\n<script>\nimport verifyToken from '@/utils/verifyToken'\nimport axios from 'axios'\n\nexport default {\n    name: \"Contacts\",\n    data() {\n        return {\n            search_text: \"\",\n            user_id: null,\n            found_contact: null,\n            contact_not_found: false,\n            contacts: [],\n            toast: {\n                show: false,\n                message: \"\",\n            }\n        };\n    },\n    methods: {\n        async search() {\n            try {\n                const response = await axios.get(`${this.$store.state.API_URL}/users/`,\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    },\n                    params: {\n                        search: this.search_text\n                    }\n                });\n                this.found_contact = response.data;\n            } catch (error) {\n                this.contact_not_found = true;\n                this.toast = {\n                    show: true,\n                    message: \"Contact not found\",\n                    color: \"danger\"\n                }\n            }\n        },\n        async remove_contact(id) {\n            try {\n                await axios.delete(`${this.$store.state.API_URL}/contacts/${id}`,{\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                });\n                this.contacts = this.contacts.filter(contact => contact.id !== id);\n            } catch (error) {\n                this.toast = {\n                    show: true,\n                    message: \"Error removing contact\",\n                }                \n            }\n        },\n        async add_contact(id){\n            try {\n                await axios.post(`${this.$store.state.API_URL}/contacts/${id}`, null,{\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                });\n                const response = await axios.get(`${this.$store.state.API_URL}/users/`,\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    },\n                    params: {\n                        id\n                    }\n                });\n                this.contacts.push(response.data);\n            } catch (error) {\n                this.toast = {\n                    show: true,\n                    message: \"Error adding contact\",\n                }\n            }\n        }\n    },\n    computed: {\n        contacts_usernames() {\n            return this.contacts.map(contact => contact.username);\n        },\n        sorted_contacts() {\n            return this.contacts.sort((a, b) => a.name.localeCompare(b.name));\n        }\n    },\n    watch: {\n        search_text() {\n            this.found_contact = null;\n            this.contact_not_found = false;\n        }\n    },\n    async beforeMount() {\n        verifyToken();\n\n        const response = await axios.get(`${this.$store.state.API_URL}/users/`,\n            {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n        \n        this.user_id = response.data.id;\n    },\n    async mounted() {\n        const response = await axios.get(`${this.$store.state.API_URL}/contacts/`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n        this.contacts = response.data;\n    }\n}\n</script>\n\n<style scoped>\n.user_card {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n}\n.user_avatar {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n}\n.user_info {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n</style>","import { render } from \"./Contacts.vue?vue&type=template&id=71a7815e&scoped=true\"\nimport script from \"./Contacts.vue?vue&type=script&lang=js\"\nexport * from \"./Contacts.vue?vue&type=script&lang=js\"\n\nimport \"./Contacts.vue?vue&type=style&index=0&id=71a7815e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/rodri/Documents/Weapon_detection/frontend/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-71a7815e\"]])\n\nexport default __exports__"],"names":["verifyToken","localStorage","getItem","router","name","_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_CContainer","_component_CRow","_component_CCol","xs","md","_component_CListGroup","_Fragment","$options","contact","_createBlock","_component_CListGroupItem","key","id","_component_CContainerFluid","height","_hoisted_2","_hoisted_3","username","_component_CButton","color","size","onClick","_component_CIcon","_component_CCard","_component_CCardHeader","_component_CInputGroup","_component_CFormInput","placeholder","type","$data","_component_CInputGroupText","_component_CCardBody","_hoisted_4","_component_CCardText","_hoisted_5","_component_CCardTitle","includes","show","_component_CToaster","style","_component_CToast","autohide","fade","onHide","_component_CToastHeader","_component_CToastBody","message","data","search_text","user_id","found_contact","contact_not_found","contacts","toast","methods","search","axios","$store","state","API_URL","headers","Authorization","params","response","remove_contact","filter","add_contact","push","computed","contacts_usernames","this","map","sorted_contacts","sort","a","b","localeCompare","watch","beforeMount","mounted","__exports__","render"],"sourceRoot":""}