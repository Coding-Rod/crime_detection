{
  "swagger": "2.0",
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token in the format 'Bearer {token}'"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": "REST API for the project."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/": {
      "get": {
        "description": "This endpoint returns a list of users.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "This endpoint returns a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "description": "This endpoint updates a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User object that needs to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe",
                  "description": "The name of the user.",
                  "required": false
                },
                "username": {
                  "type": "string",
                  "example": "john123",
                  "description": "The username of the user.",
                  "required": false
                },
                "email": {
                  "type": "string",
                  "example": "john123@fakermail.com",
                  "description": "The email of the user.",
                  "required": false
                },
                "password": {
                  "type": "string",
                  "example": "password",
                  "description": "The password of the user.",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict, some field must be unique"
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "This endpoint deletes a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/nodes/": {
      "get": {
        "description": "This endpoint returns a list of nodes.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Nodes"
        ]
      },
      "post": {
        "description": "This endpoint creates a node.",
        "parameters": [
          {
            "name": "node",
            "in": "body",
            "description": "Node object that needs to be added.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Node 1",
                  "description": "The name of the node.",
                  "required": true
                },
                "location": {
                  "type": "string",
                  "example": "123.456, 789.012",
                  "description": "The location of the node.",
                  "required": false
                },
                "userId": {
                  "type": "string",
                  "example": "1",
                  "description": "The id of the user that owns the node.",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Nodes"
        ]
      }
    },
    "/nodes/{id}": {
      "get": {
        "description": "This endpoint returns a node.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Nodes"
        ]
      },
      "patch": {
        "description": "This endpoint updates a node.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "node",
            "in": "body",
            "description": "Node object that needs to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Node 1",
                  "description": "The name of the node.",
                  "required": false
                },
                "location": {
                  "type": "string",
                  "example": "123.456, 789.012",
                  "description": "The location of the node.",
                  "required": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          },
          "409":{
            "description": "Conflict, some field must be unique"
          }
        },
        "tags": [
          "Nodes"
        ]
      },
      "delete": {
        "description": "This endpoint deletes a node.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Nodes"
        ]
      }
    },
    "/nodes/{id}/toggle-recording": {
      "patch": {
        "description": "This endpoint toggles the recording state of a node.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Nodes"
        ]
      }
    },
    "/contact/{caller}": {
      "get": {
        "description": "This endpoint returns a list of contacts.",
        "parameters": [
          {
            "name": "caller",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/contact/{id}/{caller}": {
      "get": {
        "description": "This endpoint returns a contact.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "caller",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/contact/": {
      "post": {
        "description": "This endpoint creates a contact.",
        "parameters": [
          {
            "name": "contact",
            "in": "body",
            "description": "Contact object that needs to be added.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "called": {
                  "type": "string",
                  "example": "1234567890",
                  "description": "The caller of the contact.",
                  "required": true
                },
                "caller": {
                  "type": "string",
                  "example": "1234567890",
                  "description": "The called of the contact.",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409":{
            "description": "Conflict, contact already exists"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/contact/{id}": {
      "delete": {
        "description": "This endpoint deletes a contact.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Contact"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "description": "This endpoint is used to register a new user.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object that needs to be added to the database.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe",
                  "description": "The name of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                },
                "username": {
                  "type": "string",
                  "example": "johndoe",
                  "description": "The username of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                },
                "email": {
                  "type": "string",
                  "example": "john123@fakermail.com",
                  "description": "The email of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                },
                "password": {
                  "type": "string",
                  "example": "password",
                  "description": "The password of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "409":{
            "description": "Conflict, user already exists"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "This endpoint is used to login a user.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object that needs to be added to the database.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "johndoe",
                  "description": "The username of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                },
                "password": {
                  "type": "string",
                  "example": "password",
                  "description": "The password of the user.",
                  "required": true,
                  "minLength": 1,
                  "maxLength": 255
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized, invalid password"
          },
          "404":{
            "description": "Not Found"
          }
        },
        "tags": [
          "Auth"
        ]
      }
    }
  }
}